
glcd_test1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000021a  00800100  00000b84  00000c18  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b84  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000040a  0080031a  0080031a  00000e32  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000e32  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000e64  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000128  00000000  00000000  00000ea0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001b8c  00000000  00000000  00000fc8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b3d  00000000  00000000  00002b54  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000cdd  00000000  00000000  00003691  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003b8  00000000  00000000  00004370  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000064c  00000000  00000000  00004728  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000019a3  00000000  00000000  00004d74  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f8  00000000  00000000  00006717  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	13 e0       	ldi	r17, 0x03	; 3
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e4 e8       	ldi	r30, 0x84	; 132
  a0:	fb e0       	ldi	r31, 0x0B	; 11
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	aa 31       	cpi	r26, 0x1A	; 26
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	27 e0       	ldi	r18, 0x07	; 7
  b4:	aa e1       	ldi	r26, 0x1A	; 26
  b6:	b3 e0       	ldi	r27, 0x03	; 3
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a4 32       	cpi	r26, 0x24	; 36
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	1b d0       	rcall	.+54     	; 0xfa <main>
  c4:	5d c5       	rjmp	.+2746   	; 0xb80 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <Port_init>:
char Dis_Scr2[]={" INHA UNIVERSITY "};
char Dis_Scr_IO_ON[]={"O"};
char Dis_Scr_IO_OFF[]={"X"};

void Port_init(void){
	PORTA=0x00;   DDRA=0xFF;
  c8:	1b ba       	out	0x1b, r1	; 27
  ca:	8f ef       	ldi	r24, 0xFF	; 255
  cc:	8a bb       	out	0x1a, r24	; 26
	PORTB=0xFE;      DDRB=0b111111110;
  ce:	9e ef       	ldi	r25, 0xFE	; 254
  d0:	98 bb       	out	0x18, r25	; 24
  d2:	97 bb       	out	0x17, r25	; 23
	PORTC=0x00;      DDRC=0xF0;
  d4:	15 ba       	out	0x15, r1	; 21
  d6:	90 ef       	ldi	r25, 0xF0	; 240
  d8:	94 bb       	out	0x14, r25	; 20
	PORTD=0x80;      DDRD=0b10000000;
  da:	90 e8       	ldi	r25, 0x80	; 128
  dc:	92 bb       	out	0x12, r25	; 18
  de:	91 bb       	out	0x11, r25	; 17
	PORTE=0x00;      DDRE=0xFF;
  e0:	13 b8       	out	0x03, r1	; 3
  e2:	82 b9       	out	0x02, r24	; 2
	PORTF=0x00;      DDRF=0x00;
  e4:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
  e8:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
  ec:	08 95       	ret

000000ee <init_devices>:
}

void init_devices(void){
	cli();
  ee:	f8 94       	cli
	Port_init();
  f0:	eb df       	rcall	.-42     	; 0xc8 <Port_init>
	lcd_init();
  f2:	ed d0       	rcall	.+474    	; 0x2ce <lcd_init>
	Adc_init();
  f4:	69 d0       	rcall	.+210    	; 0x1c8 <Adc_init>
  f6:	78 94       	sei
	sei();
  f8:	08 95       	ret

000000fa <main>:
  fa:	f9 df       	rcall	.-14     	; 0xee <init_devices>
}

int main(void)
{
	init_devices();
	lcd_clear();
  fc:	d6 d0       	rcall	.+428    	; 0x2aa <lcd_clear>
  fe:	42 e1       	ldi	r20, 0x12	; 18
	lcd_string(0,0,Dis_Scr1);
 100:	51 e0       	ldi	r21, 0x01	; 1
 102:	60 e0       	ldi	r22, 0x00	; 0
 104:	80 e0       	ldi	r24, 0x00	; 0
 106:	2f d1       	rcall	.+606    	; 0x366 <lcd_string>
 108:	40 e0       	ldi	r20, 0x00	; 0
	lcd_string(1,0,Dis_Scr2);
 10a:	51 e0       	ldi	r21, 0x01	; 1
 10c:	60 e0       	ldi	r22, 0x00	; 0
 10e:	81 e0       	ldi	r24, 0x01	; 1
 110:	2a d1       	rcall	.+596    	; 0x366 <lcd_string>
 112:	42 e1       	ldi	r20, 0x12	; 18
	lcd_string(2,0,Dis_Scr1);
 114:	51 e0       	ldi	r21, 0x01	; 1
 116:	60 e0       	ldi	r22, 0x00	; 0
 118:	82 e0       	ldi	r24, 0x02	; 2
 11a:	25 d1       	rcall	.+586    	; 0x366 <lcd_string>
 11c:	0c e1       	ldi	r16, 0x1C	; 28
		lcd_xy(3, 0); GLCD_4DigitDecimal(DATA_ADC7);

		lcd_string(0, 0, "ADC5, ADC6 Acceleration");
		GLCD_Line(32, 0, 31, 127);
		GLCD_Line(0, 63, 63, 63);
		GLCD_Circle(Data_ADC5, Data_ADC6, 5);
 11e:	13 e0       	ldi	r17, 0x03	; 3
 120:	ce e1       	ldi	r28, 0x1E	; 30
 122:	d3 e0       	ldi	r29, 0x03	; 3
		lcd_string(0, 0, "ADC3, ADC4 JOYSTICK");
		GLCD_Line(32, 0, 31, 127);
		GLCD_Line(0, 63, 63, 63);
		GLCD_Circle(Data_ADC3, Data_ADC4, 5);*/

		Data_ADC5 = Read_Adc_Data(5) - 352 + 32;
 124:	85 e0       	ldi	r24, 0x05	; 5
 126:	57 d0       	rcall	.+174    	; 0x1d6 <Read_Adc_Data>
 128:	80 54       	subi	r24, 0x40	; 64
 12a:	91 40       	sbci	r25, 0x01	; 1
 12c:	90 93 1f 03 	sts	0x031F, r25	; 0x80031f <Data_ADC5+0x1>
 130:	80 93 1e 03 	sts	0x031E, r24	; 0x80031e <Data_ADC5>
		Data_ADC6 = Read_Adc_Data(6) - 358 + 62;
 134:	86 e0       	ldi	r24, 0x06	; 6
 136:	4f d0       	rcall	.+158    	; 0x1d6 <Read_Adc_Data>
 138:	88 52       	subi	r24, 0x28	; 40
 13a:	91 40       	sbci	r25, 0x01	; 1
 13c:	90 93 1d 03 	sts	0x031D, r25	; 0x80031d <Data_ADC6+0x1>
 140:	80 93 1c 03 	sts	0x031C, r24	; 0x80031c <Data_ADC6>
		DATA_ADC7 = Read_Adc_Data(7);
 144:	87 e0       	ldi	r24, 0x07	; 7
 146:	47 d0       	rcall	.+142    	; 0x1d6 <Read_Adc_Data>
 148:	90 93 1b 03 	sts	0x031B, r25	; 0x80031b <__data_end+0x1>
 14c:	80 93 1a 03 	sts	0x031A, r24	; 0x80031a <__data_end>
 150:	2f e5       	ldi	r18, 0x5F	; 95
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 152:	8a ee       	ldi	r24, 0xEA	; 234
 154:	90 e0       	ldi	r25, 0x00	; 0
 156:	21 50       	subi	r18, 0x01	; 1
 158:	80 40       	sbci	r24, 0x00	; 0
 15a:	90 40       	sbci	r25, 0x00	; 0
 15c:	e1 f7       	brne	.-8      	; 0x156 <main+0x5c>
		_delay_ms(300);

		lcd_clear();
 15e:	00 c0       	rjmp	.+0      	; 0x160 <main+0x66>
		ScreenBuffer_clear();
 160:	00 00       	nop
 162:	a3 d0       	rcall	.+326    	; 0x2aa <lcd_clear>

		lcd_xy(1, 0); GLCD_4DigitDecimal(Data_ADC5);
 164:	8e d1       	rcall	.+796    	; 0x482 <ScreenBuffer_clear>
 166:	60 e0       	ldi	r22, 0x00	; 0
 168:	81 e0       	ldi	r24, 0x01	; 1
 16a:	ba d0       	rcall	.+372    	; 0x2e0 <lcd_xy>
 16c:	80 91 1e 03 	lds	r24, 0x031E	; 0x80031e <Data_ADC5>
 170:	90 91 1f 03 	lds	r25, 0x031F	; 0x80031f <Data_ADC5+0x1>
		lcd_xy(2, 0); GLCD_4DigitDecimal(Data_ADC6);
 174:	dd d2       	rcall	.+1466   	; 0x730 <GLCD_4DigitDecimal>
 176:	60 e0       	ldi	r22, 0x00	; 0
 178:	82 e0       	ldi	r24, 0x02	; 2
 17a:	b2 d0       	rcall	.+356    	; 0x2e0 <lcd_xy>
 17c:	80 91 1c 03 	lds	r24, 0x031C	; 0x80031c <Data_ADC6>
 180:	90 91 1d 03 	lds	r25, 0x031D	; 0x80031d <Data_ADC6+0x1>
		lcd_xy(3, 0); GLCD_4DigitDecimal(DATA_ADC7);
 184:	d5 d2       	rcall	.+1450   	; 0x730 <GLCD_4DigitDecimal>
 186:	60 e0       	ldi	r22, 0x00	; 0
 188:	83 e0       	ldi	r24, 0x03	; 3
 18a:	aa d0       	rcall	.+340    	; 0x2e0 <lcd_xy>
 18c:	80 91 1a 03 	lds	r24, 0x031A	; 0x80031a <__data_end>
 190:	90 91 1b 03 	lds	r25, 0x031B	; 0x80031b <__data_end+0x1>

		lcd_string(0, 0, "ADC5, ADC6 Acceleration");
 194:	cd d2       	rcall	.+1434   	; 0x730 <GLCD_4DigitDecimal>
 196:	42 e0       	ldi	r20, 0x02	; 2
 198:	53 e0       	ldi	r21, 0x03	; 3
 19a:	60 e0       	ldi	r22, 0x00	; 0
 19c:	80 e0       	ldi	r24, 0x00	; 0
		GLCD_Line(32, 0, 31, 127);
 19e:	e3 d0       	rcall	.+454    	; 0x366 <lcd_string>
 1a0:	2f e7       	ldi	r18, 0x7F	; 127
 1a2:	4f e1       	ldi	r20, 0x1F	; 31
 1a4:	60 e0       	ldi	r22, 0x00	; 0
 1a6:	80 e2       	ldi	r24, 0x20	; 32
		GLCD_Line(0, 63, 63, 63);
 1a8:	7e d1       	rcall	.+764    	; 0x4a6 <GLCD_Line>
 1aa:	2f e3       	ldi	r18, 0x3F	; 63
 1ac:	4f e3       	ldi	r20, 0x3F	; 63
 1ae:	6f e3       	ldi	r22, 0x3F	; 63
 1b0:	80 e0       	ldi	r24, 0x00	; 0
 1b2:	79 d1       	rcall	.+754    	; 0x4a6 <GLCD_Line>
		GLCD_Circle(Data_ADC5, Data_ADC6, 5);
 1b4:	45 e0       	ldi	r20, 0x05	; 5
 1b6:	f8 01       	movw	r30, r16
 1b8:	60 81       	ld	r22, Z
 1ba:	88 81       	ld	r24, Y
 1bc:	fc d1       	rcall	.+1016   	; 0x5b6 <GLCD_Circle>
 1be:	45 e0       	ldi	r20, 0x05	; 5
		GLCD_Circle(32, 62, 5);
 1c0:	6e e3       	ldi	r22, 0x3E	; 62
 1c2:	80 e2       	ldi	r24, 0x20	; 32
 1c4:	f8 d1       	rcall	.+1008   	; 0x5b6 <GLCD_Circle>
 1c6:	ae cf       	rjmp	.-164    	; 0x124 <main+0x2a>

000001c8 <Adc_init>:
#define ADC_2_56_TYPE 0xC0      // A/D 컨버터 사용 기준 전압  2.56 설정

//ADC initialize
void Adc_init(void)
{
	ADCSRA = 0x00;	// disable adc
 1c8:	16 b8       	out	0x06, r1	; 6
	ADMUX  = 0x00; 	// select adc input 0
 1ca:	17 b8       	out	0x07, r1	; 7
	ACSR   = 0x80;	//
 1cc:	80 e8       	ldi	r24, 0x80	; 128
 1ce:	88 b9       	out	0x08, r24	; 8
	ADCSRA = 0xC3;	// Conversion time: 6uS
 1d0:	83 ec       	ldi	r24, 0xC3	; 195
 1d2:	86 b9       	out	0x06, r24	; 6
 1d4:	08 95       	ret

000001d6 <Read_Adc_Data>:
}
unsigned int Read_Adc_Data(unsigned char adc_input)   // ADC  읽어 들이기
{	unsigned int adc = 0;
	ADCSRA = 0xC3;    // Conversion time: 6uS
 1d6:	93 ec       	ldi	r25, 0xC3	; 195
 1d8:	96 b9       	out	0x06, r25	; 6
	//CLI();
	ADMUX = adc_input | ADC_AVCC_TYPE ;      // adc  사용 핀 설정
 1da:	80 64       	ori	r24, 0x40	; 64
 1dc:	87 b9       	out	0x07, r24	; 7
	//ADMUX.3 = 1;
	ADCSRA |= 0x40;                            // Wait for the AD conversion to complete
 1de:	36 9a       	sbi	0x06, 6	; 6
	while((ADCSRA & 0x10) != 0x10);
 1e0:	34 9b       	sbis	0x06, 4	; 6
 1e2:	fe cf       	rjmp	.-4      	; 0x1e0 <Read_Adc_Data+0xa>
	adc += ADCL + ( ADCH * 256 );
 1e4:	24 b1       	in	r18, 0x04	; 4
 1e6:	85 b1       	in	r24, 0x05	; 5
	//SEI();
	ADCSRA = 0x00;
 1e8:	16 b8       	out	0x06, r1	; 6
	return adc;
 1ea:	90 e0       	ldi	r25, 0x00	; 0
 1ec:	98 2f       	mov	r25, r24
 1ee:	88 27       	eor	r24, r24
}
 1f0:	82 0f       	add	r24, r18
 1f2:	91 1d       	adc	r25, r1
 1f4:	08 95       	ret

000001f6 <cmndl>:
		number = number % 100;
		i = number/10;
		flag = GLCD_1DigitDecimal(i, flag); // 10^1
		i = number % 10;
		lcd_char(i + '0');              // 10^0
	}
 1f6:	1d 9a       	sbi	0x03, 5	; 3
 1f8:	91 e3       	ldi	r25, 0x31	; 49
 1fa:	9a 95       	dec	r25
 1fc:	f1 f7       	brne	.-4      	; 0x1fa <cmndl+0x4>
 1fe:	00 00       	nop
 200:	1c 98       	cbi	0x03, 4	; 3
 202:	1e 98       	cbi	0x03, 6	; 3
 204:	1f 9a       	sbi	0x03, 7	; 3
 206:	8b bb       	out	0x1b, r24	; 27
 208:	81 e3       	ldi	r24, 0x31	; 49
 20a:	8a 95       	dec	r24
 20c:	f1 f7       	brne	.-4      	; 0x20a <cmndl+0x14>
 20e:	00 00       	nop
 210:	1d 98       	cbi	0x03, 5	; 3
 212:	08 95       	ret

00000214 <cmndr>:
 214:	1d 9a       	sbi	0x03, 5	; 3
 216:	91 e3       	ldi	r25, 0x31	; 49
 218:	9a 95       	dec	r25
 21a:	f1 f7       	brne	.-4      	; 0x218 <cmndr+0x4>
 21c:	00 00       	nop
 21e:	1c 98       	cbi	0x03, 4	; 3
 220:	1e 9a       	sbi	0x03, 6	; 3
 222:	1f 98       	cbi	0x03, 7	; 3
 224:	8b bb       	out	0x1b, r24	; 27
 226:	81 e3       	ldi	r24, 0x31	; 49
 228:	8a 95       	dec	r24
 22a:	f1 f7       	brne	.-4      	; 0x228 <cmndr+0x14>
 22c:	00 00       	nop
 22e:	1d 98       	cbi	0x03, 5	; 3
 230:	08 95       	ret

00000232 <cmnda>:
 232:	1d 9a       	sbi	0x03, 5	; 3
 234:	91 e3       	ldi	r25, 0x31	; 49
 236:	9a 95       	dec	r25
 238:	f1 f7       	brne	.-4      	; 0x236 <cmnda+0x4>
 23a:	00 00       	nop
 23c:	1c 98       	cbi	0x03, 4	; 3
 23e:	1e 9a       	sbi	0x03, 6	; 3
 240:	1f 9a       	sbi	0x03, 7	; 3
 242:	8b bb       	out	0x1b, r24	; 27
 244:	81 e3       	ldi	r24, 0x31	; 49
 246:	8a 95       	dec	r24
 248:	f1 f7       	brne	.-4      	; 0x246 <cmnda+0x14>
 24a:	00 00       	nop
 24c:	1d 98       	cbi	0x03, 5	; 3
 24e:	08 95       	ret

00000250 <datal>:
 250:	1d 9a       	sbi	0x03, 5	; 3
 252:	91 e3       	ldi	r25, 0x31	; 49
 254:	9a 95       	dec	r25
 256:	f1 f7       	brne	.-4      	; 0x254 <datal+0x4>
 258:	00 00       	nop
 25a:	1c 9a       	sbi	0x03, 4	; 3
 25c:	1e 98       	cbi	0x03, 6	; 3
 25e:	1f 9a       	sbi	0x03, 7	; 3
 260:	8b bb       	out	0x1b, r24	; 27
 262:	81 e3       	ldi	r24, 0x31	; 49
 264:	8a 95       	dec	r24
 266:	f1 f7       	brne	.-4      	; 0x264 <datal+0x14>
 268:	00 00       	nop
 26a:	1d 98       	cbi	0x03, 5	; 3
 26c:	08 95       	ret

0000026e <datar>:
 26e:	1d 9a       	sbi	0x03, 5	; 3
 270:	91 e3       	ldi	r25, 0x31	; 49
 272:	9a 95       	dec	r25
 274:	f1 f7       	brne	.-4      	; 0x272 <datar+0x4>
 276:	00 00       	nop
 278:	1c 9a       	sbi	0x03, 4	; 3
 27a:	1e 9a       	sbi	0x03, 6	; 3
 27c:	1f 98       	cbi	0x03, 7	; 3
 27e:	8b bb       	out	0x1b, r24	; 27
 280:	81 e3       	ldi	r24, 0x31	; 49
 282:	8a 95       	dec	r24
 284:	f1 f7       	brne	.-4      	; 0x282 <datar+0x14>
 286:	00 00       	nop
 288:	1d 98       	cbi	0x03, 5	; 3
 28a:	08 95       	ret

0000028c <dataa>:
 28c:	1d 9a       	sbi	0x03, 5	; 3
 28e:	91 e3       	ldi	r25, 0x31	; 49
 290:	9a 95       	dec	r25
 292:	f1 f7       	brne	.-4      	; 0x290 <dataa+0x4>
 294:	00 00       	nop
 296:	1c 9a       	sbi	0x03, 4	; 3
 298:	1e 9a       	sbi	0x03, 6	; 3
 29a:	1f 9a       	sbi	0x03, 7	; 3
 29c:	8b bb       	out	0x1b, r24	; 27
 29e:	81 e3       	ldi	r24, 0x31	; 49
 2a0:	8a 95       	dec	r24
 2a2:	f1 f7       	brne	.-4      	; 0x2a0 <dataa+0x14>
 2a4:	00 00       	nop
 2a6:	1d 98       	cbi	0x03, 5	; 3
 2a8:	08 95       	ret

000002aa <lcd_clear>:
 2aa:	cf 93       	push	r28
 2ac:	df 93       	push	r29
 2ae:	d8 eb       	ldi	r29, 0xB8	; 184
 2b0:	8d 2f       	mov	r24, r29
 2b2:	bf df       	rcall	.-130    	; 0x232 <cmnda>
 2b4:	80 e4       	ldi	r24, 0x40	; 64
 2b6:	bd df       	rcall	.-134    	; 0x232 <cmnda>
 2b8:	c0 e4       	ldi	r28, 0x40	; 64
 2ba:	80 e0       	ldi	r24, 0x00	; 0
 2bc:	e7 df       	rcall	.-50     	; 0x28c <dataa>
 2be:	c1 50       	subi	r28, 0x01	; 1
 2c0:	e1 f7       	brne	.-8      	; 0x2ba <lcd_clear+0x10>
 2c2:	df 5f       	subi	r29, 0xFF	; 255
 2c4:	d0 3c       	cpi	r29, 0xC0	; 192
 2c6:	a1 f7       	brne	.-24     	; 0x2b0 <lcd_clear+0x6>
 2c8:	df 91       	pop	r29
 2ca:	cf 91       	pop	r28
 2cc:	08 95       	ret

000002ce <lcd_init>:
 2ce:	8f e3       	ldi	r24, 0x3F	; 63
 2d0:	b0 df       	rcall	.-160    	; 0x232 <cmnda>
 2d2:	80 ec       	ldi	r24, 0xC0	; 192
 2d4:	ae df       	rcall	.-164    	; 0x232 <cmnda>
 2d6:	88 eb       	ldi	r24, 0xB8	; 184
 2d8:	ac df       	rcall	.-168    	; 0x232 <cmnda>
 2da:	80 e4       	ldi	r24, 0x40	; 64
 2dc:	aa cf       	rjmp	.-172    	; 0x232 <cmnda>
 2de:	08 95       	ret

000002e0 <lcd_xy>:
 2e0:	80 93 20 03 	sts	0x0320, r24	; 0x800320 <xchar>
 2e4:	60 93 23 07 	sts	0x0723, r22	; 0x800723 <ychar>
 2e8:	88 54       	subi	r24, 0x48	; 72
 2ea:	a3 df       	rcall	.-186    	; 0x232 <cmnda>
 2ec:	80 91 23 07 	lds	r24, 0x0723	; 0x800723 <ychar>
 2f0:	8a 30       	cpi	r24, 0x0A	; 10
 2f2:	38 f4       	brcc	.+14     	; 0x302 <lcd_xy+0x22>
 2f4:	98 2f       	mov	r25, r24
 2f6:	99 0f       	add	r25, r25
 2f8:	89 0f       	add	r24, r25
 2fa:	88 0f       	add	r24, r24
 2fc:	8c 5b       	subi	r24, 0xBC	; 188
 2fe:	7b cf       	rjmp	.-266    	; 0x1f6 <cmndl>
 300:	08 95       	ret
 302:	90 e0       	ldi	r25, 0x00	; 0
 304:	0a 97       	sbiw	r24, 0x0a	; 10
 306:	98 2f       	mov	r25, r24
 308:	99 0f       	add	r25, r25
 30a:	89 0f       	add	r24, r25
 30c:	88 0f       	add	r24, r24
 30e:	80 5c       	subi	r24, 0xC0	; 192
 310:	81 cf       	rjmp	.-254    	; 0x214 <cmndr>
 312:	08 95       	ret

00000314 <lcd_char>:
 314:	1f 93       	push	r17
 316:	cf 93       	push	r28
 318:	df 93       	push	r29
 31a:	90 e0       	ldi	r25, 0x00	; 0
 31c:	ec 01       	movw	r28, r24
 31e:	cc 0f       	add	r28, r28
 320:	dd 1f       	adc	r29, r29
 322:	cc 0f       	add	r28, r28
 324:	dd 1f       	adc	r29, r29
 326:	8c 0f       	add	r24, r28
 328:	9d 1f       	adc	r25, r29
 32a:	ec 01       	movw	r28, r24
 32c:	c9 57       	subi	r28, 0x79	; 121
 32e:	df 4f       	sbci	r29, 0xFF	; 255
 330:	15 e0       	ldi	r17, 0x05	; 5
 332:	80 91 23 07 	lds	r24, 0x0723	; 0x800723 <ychar>
 336:	8a 30       	cpi	r24, 0x0A	; 10
 338:	18 f4       	brcc	.+6      	; 0x340 <lcd_char+0x2c>
 33a:	88 81       	ld	r24, Y
 33c:	89 df       	rcall	.-238    	; 0x250 <datal>
 33e:	02 c0       	rjmp	.+4      	; 0x344 <lcd_char+0x30>
 340:	88 81       	ld	r24, Y
 342:	95 df       	rcall	.-214    	; 0x26e <datar>
 344:	11 50       	subi	r17, 0x01	; 1
 346:	21 96       	adiw	r28, 0x01	; 1
 348:	11 11       	cpse	r17, r1
 34a:	f3 cf       	rjmp	.-26     	; 0x332 <lcd_char+0x1e>
 34c:	80 91 23 07 	lds	r24, 0x0723	; 0x800723 <ychar>
 350:	8a 30       	cpi	r24, 0x0A	; 10
 352:	18 f4       	brcc	.+6      	; 0x35a <lcd_char+0x46>
 354:	80 e0       	ldi	r24, 0x00	; 0
 356:	7c df       	rcall	.-264    	; 0x250 <datal>
 358:	02 c0       	rjmp	.+4      	; 0x35e <lcd_char+0x4a>
 35a:	80 e0       	ldi	r24, 0x00	; 0
 35c:	88 df       	rcall	.-240    	; 0x26e <datar>
 35e:	df 91       	pop	r29
 360:	cf 91       	pop	r28
 362:	1f 91       	pop	r17
 364:	08 95       	ret

00000366 <lcd_string>:
 366:	cf 93       	push	r28
 368:	df 93       	push	r29
 36a:	ea 01       	movw	r28, r20
 36c:	80 93 20 03 	sts	0x0320, r24	; 0x800320 <xchar>
 370:	60 93 23 07 	sts	0x0723, r22	; 0x800723 <ychar>
 374:	b5 df       	rcall	.-150    	; 0x2e0 <lcd_xy>
 376:	88 81       	ld	r24, Y
 378:	88 23       	and	r24, r24
 37a:	81 f0       	breq	.+32     	; 0x39c <lcd_string+0x36>
 37c:	80 91 23 07 	lds	r24, 0x0723	; 0x800723 <ychar>
 380:	8a 30       	cpi	r24, 0x0A	; 10
 382:	11 f4       	brne	.+4      	; 0x388 <lcd_string+0x22>
 384:	80 e4       	ldi	r24, 0x40	; 64
 386:	46 df       	rcall	.-372    	; 0x214 <cmndr>
 388:	89 91       	ld	r24, Y+
 38a:	c4 df       	rcall	.-120    	; 0x314 <lcd_char>
 38c:	80 91 23 07 	lds	r24, 0x0723	; 0x800723 <ychar>
 390:	8f 5f       	subi	r24, 0xFF	; 255
 392:	80 93 23 07 	sts	0x0723, r24	; 0x800723 <ychar>
 396:	88 81       	ld	r24, Y
 398:	81 11       	cpse	r24, r1
 39a:	f0 cf       	rjmp	.-32     	; 0x37c <lcd_string+0x16>
 39c:	df 91       	pop	r29
 39e:	cf 91       	pop	r28
 3a0:	08 95       	ret

000003a2 <GLCD_Axis_xy>:
 3a2:	cf 93       	push	r28
 3a4:	c6 2f       	mov	r28, r22
 3a6:	88 54       	subi	r24, 0x48	; 72
 3a8:	44 df       	rcall	.-376    	; 0x232 <cmnda>
 3aa:	c0 34       	cpi	r28, 0x40	; 64
 3ac:	20 f4       	brcc	.+8      	; 0x3b6 <GLCD_Axis_xy+0x14>
 3ae:	80 e4       	ldi	r24, 0x40	; 64
 3b0:	8c 0f       	add	r24, r28
 3b2:	21 df       	rcall	.-446    	; 0x1f6 <cmndl>
 3b4:	02 c0       	rjmp	.+4      	; 0x3ba <GLCD_Axis_xy+0x18>
 3b6:	8c 2f       	mov	r24, r28
 3b8:	2d df       	rcall	.-422    	; 0x214 <cmndr>
 3ba:	cf 91       	pop	r28
 3bc:	08 95       	ret

000003be <GLCD_Dot>:
 3be:	ef 92       	push	r14
 3c0:	ff 92       	push	r15
 3c2:	0f 93       	push	r16
 3c4:	1f 93       	push	r17
 3c6:	cf 93       	push	r28
 3c8:	80 34       	cpi	r24, 0x40	; 64
 3ca:	08 f0       	brcs	.+2      	; 0x3ce <GLCD_Dot+0x10>
 3cc:	54 c0       	rjmp	.+168    	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
 3ce:	66 23       	and	r22, r22
 3d0:	0c f4       	brge	.+2      	; 0x3d4 <GLCD_Dot+0x16>
 3d2:	51 c0       	rjmp	.+162    	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
 3d4:	28 2f       	mov	r18, r24
 3d6:	26 95       	lsr	r18
 3d8:	26 95       	lsr	r18
 3da:	26 95       	lsr	r18
 3dc:	98 2f       	mov	r25, r24
 3de:	97 70       	andi	r25, 0x07	; 7
 3e0:	71 f0       	breq	.+28     	; 0x3fe <GLCD_Dot+0x40>
 3e2:	91 30       	cpi	r25, 0x01	; 1
 3e4:	71 f0       	breq	.+28     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3e6:	92 30       	cpi	r25, 0x02	; 2
 3e8:	71 f0       	breq	.+28     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 3ea:	93 30       	cpi	r25, 0x03	; 3
 3ec:	71 f0       	breq	.+28     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3ee:	94 30       	cpi	r25, 0x04	; 4
 3f0:	71 f0       	breq	.+28     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 3f2:	95 30       	cpi	r25, 0x05	; 5
 3f4:	71 f0       	breq	.+28     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 3f6:	96 30       	cpi	r25, 0x06	; 6
 3f8:	71 f0       	breq	.+28     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 3fa:	90 e8       	ldi	r25, 0x80	; 128
 3fc:	0d c0       	rjmp	.+26     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 3fe:	91 e0       	ldi	r25, 0x01	; 1
 400:	0b c0       	rjmp	.+22     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 402:	92 e0       	ldi	r25, 0x02	; 2
 404:	09 c0       	rjmp	.+18     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 406:	94 e0       	ldi	r25, 0x04	; 4
 408:	07 c0       	rjmp	.+14     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 40a:	98 e0       	ldi	r25, 0x08	; 8
 40c:	05 c0       	rjmp	.+10     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 40e:	90 e1       	ldi	r25, 0x10	; 16
 410:	03 c0       	rjmp	.+6      	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 412:	90 e2       	ldi	r25, 0x20	; 32
 414:	01 c0       	rjmp	.+2      	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 416:	90 e4       	ldi	r25, 0x40	; 64
 418:	c6 2f       	mov	r28, r22
 41a:	02 2f       	mov	r16, r18
 41c:	10 e0       	ldi	r17, 0x00	; 0
 41e:	e6 2e       	mov	r14, r22
 420:	f1 2c       	mov	r15, r1
 422:	f8 01       	movw	r30, r16
 424:	f6 95       	lsr	r31
 426:	fe 2f       	mov	r31, r30
 428:	ee 27       	eor	r30, r30
 42a:	f7 95       	ror	r31
 42c:	e7 95       	ror	r30
 42e:	ed 5d       	subi	r30, 0xDD	; 221
 430:	fc 4f       	sbci	r31, 0xFC	; 252
 432:	ee 0d       	add	r30, r14
 434:	ff 1d       	adc	r31, r15
 436:	80 81       	ld	r24, Z
 438:	98 2b       	or	r25, r24
 43a:	90 83       	st	Z, r25
 43c:	82 2f       	mov	r24, r18
 43e:	b1 df       	rcall	.-158    	; 0x3a2 <GLCD_Axis_xy>
 440:	c0 34       	cpi	r28, 0x40	; 64
 442:	68 f4       	brcc	.+26     	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 444:	16 95       	lsr	r17
 446:	10 2f       	mov	r17, r16
 448:	00 27       	eor	r16, r16
 44a:	17 95       	ror	r17
 44c:	07 95       	ror	r16
 44e:	0d 5d       	subi	r16, 0xDD	; 221
 450:	1c 4f       	sbci	r17, 0xFC	; 252
 452:	f8 01       	movw	r30, r16
 454:	ee 0d       	add	r30, r14
 456:	ff 1d       	adc	r31, r15
 458:	80 81       	ld	r24, Z
 45a:	fa de       	rcall	.-524    	; 0x250 <datal>
 45c:	0c c0       	rjmp	.+24     	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
 45e:	16 95       	lsr	r17
 460:	10 2f       	mov	r17, r16
 462:	00 27       	eor	r16, r16
 464:	17 95       	ror	r17
 466:	07 95       	ror	r16
 468:	0d 5d       	subi	r16, 0xDD	; 221
 46a:	1c 4f       	sbci	r17, 0xFC	; 252
 46c:	f8 01       	movw	r30, r16
 46e:	ee 0d       	add	r30, r14
 470:	ff 1d       	adc	r31, r15
 472:	80 81       	ld	r24, Z
 474:	fc de       	rcall	.-520    	; 0x26e <datar>
 476:	cf 91       	pop	r28
 478:	1f 91       	pop	r17
 47a:	0f 91       	pop	r16
 47c:	ff 90       	pop	r15
 47e:	ef 90       	pop	r14
 480:	08 95       	ret

00000482 <ScreenBuffer_clear>:
 482:	e3 e2       	ldi	r30, 0x23	; 35
 484:	f3 e0       	ldi	r31, 0x03	; 3
 486:	23 e2       	ldi	r18, 0x23	; 35
 488:	37 e0       	ldi	r19, 0x07	; 7
 48a:	08 c0       	rjmp	.+16     	; 0x49c <ScreenBuffer_clear+0x1a>
 48c:	11 92       	st	Z+, r1
 48e:	e8 17       	cp	r30, r24
 490:	f9 07       	cpc	r31, r25
 492:	e1 f7       	brne	.-8      	; 0x48c <ScreenBuffer_clear+0xa>
 494:	fc 01       	movw	r30, r24
 496:	82 17       	cp	r24, r18
 498:	93 07       	cpc	r25, r19
 49a:	21 f0       	breq	.+8      	; 0x4a4 <ScreenBuffer_clear+0x22>
 49c:	cf 01       	movw	r24, r30
 49e:	80 58       	subi	r24, 0x80	; 128
 4a0:	9f 4f       	sbci	r25, 0xFF	; 255
 4a2:	f4 cf       	rjmp	.-24     	; 0x48c <ScreenBuffer_clear+0xa>
 4a4:	08 95       	ret

000004a6 <GLCD_Line>:
 4a6:	8f 92       	push	r8
 4a8:	9f 92       	push	r9
 4aa:	af 92       	push	r10
 4ac:	bf 92       	push	r11
 4ae:	cf 92       	push	r12
 4b0:	df 92       	push	r13
 4b2:	ef 92       	push	r14
 4b4:	ff 92       	push	r15
 4b6:	0f 93       	push	r16
 4b8:	1f 93       	push	r17
 4ba:	cf 93       	push	r28
 4bc:	df 93       	push	r29
 4be:	62 17       	cp	r22, r18
 4c0:	09 f4       	brne	.+2      	; 0x4c4 <GLCD_Line+0x1e>
 4c2:	47 c0       	rjmp	.+142    	; 0x552 <GLCD_Line+0xac>
 4c4:	62 17       	cp	r22, r18
 4c6:	18 f5       	brcc	.+70     	; 0x50e <GLCD_Line+0x68>
 4c8:	70 e0       	ldi	r23, 0x00	; 0
 4ca:	02 2f       	mov	r16, r18
 4cc:	10 e0       	ldi	r17, 0x00	; 0
 4ce:	06 17       	cp	r16, r22
 4d0:	17 07       	cpc	r17, r23
 4d2:	0c f4       	brge	.+2      	; 0x4d6 <GLCD_Line+0x30>
 4d4:	63 c0       	rjmp	.+198    	; 0x59c <GLCD_Line+0xf6>
 4d6:	c8 2f       	mov	r28, r24
 4d8:	d0 e0       	ldi	r29, 0x00	; 0
 4da:	c4 2e       	mov	r12, r20
 4dc:	d1 2c       	mov	r13, r1
 4de:	cc 1a       	sub	r12, r28
 4e0:	dd 0a       	sbc	r13, r29
 4e2:	4b 01       	movw	r8, r22
 4e4:	e1 2c       	mov	r14, r1
 4e6:	f1 2c       	mov	r15, r1
 4e8:	58 01       	movw	r10, r16
 4ea:	a6 1a       	sub	r10, r22
 4ec:	b7 0a       	sbc	r11, r23
 4ee:	c7 01       	movw	r24, r14
 4f0:	b5 01       	movw	r22, r10
 4f2:	10 d3       	rcall	.+1568   	; 0xb14 <__divmodhi4>
 4f4:	86 2f       	mov	r24, r22
 4f6:	68 2d       	mov	r22, r8
 4f8:	8c 0f       	add	r24, r28
 4fa:	61 df       	rcall	.-318    	; 0x3be <GLCD_Dot>
 4fc:	8f ef       	ldi	r24, 0xFF	; 255
 4fe:	88 1a       	sub	r8, r24
 500:	98 0a       	sbc	r9, r24
 502:	ec 0c       	add	r14, r12
 504:	fd 1c       	adc	r15, r13
 506:	08 15       	cp	r16, r8
 508:	19 05       	cpc	r17, r9
 50a:	8c f7       	brge	.-30     	; 0x4ee <GLCD_Line+0x48>
 50c:	47 c0       	rjmp	.+142    	; 0x59c <GLCD_Line+0xf6>
 50e:	70 e0       	ldi	r23, 0x00	; 0
 510:	02 2f       	mov	r16, r18
 512:	10 e0       	ldi	r17, 0x00	; 0
 514:	60 17       	cp	r22, r16
 516:	71 07       	cpc	r23, r17
 518:	0c f4       	brge	.+2      	; 0x51c <GLCD_Line+0x76>
 51a:	40 c0       	rjmp	.+128    	; 0x59c <GLCD_Line+0xf6>
 51c:	c8 2f       	mov	r28, r24
 51e:	d0 e0       	ldi	r29, 0x00	; 0
 520:	5e 01       	movw	r10, r28
 522:	a4 1a       	sub	r10, r20
 524:	b1 08       	sbc	r11, r1
 526:	4b 01       	movw	r8, r22
 528:	e1 2c       	mov	r14, r1
 52a:	f1 2c       	mov	r15, r1
 52c:	68 01       	movw	r12, r16
 52e:	c6 1a       	sub	r12, r22
 530:	d7 0a       	sbc	r13, r23
 532:	c7 01       	movw	r24, r14
 534:	b6 01       	movw	r22, r12
 536:	ee d2       	rcall	.+1500   	; 0xb14 <__divmodhi4>
 538:	86 2f       	mov	r24, r22
 53a:	68 2d       	mov	r22, r8
 53c:	8c 0f       	add	r24, r28
 53e:	3f df       	rcall	.-386    	; 0x3be <GLCD_Dot>
 540:	81 e0       	ldi	r24, 0x01	; 1
 542:	88 1a       	sub	r8, r24
 544:	91 08       	sbc	r9, r1
 546:	ea 0c       	add	r14, r10
 548:	fb 1c       	adc	r15, r11
 54a:	80 16       	cp	r8, r16
 54c:	91 06       	cpc	r9, r17
 54e:	8c f7       	brge	.-30     	; 0x532 <GLCD_Line+0x8c>
 550:	25 c0       	rjmp	.+74     	; 0x59c <GLCD_Line+0xf6>
 552:	84 17       	cp	r24, r20
 554:	11 f1       	breq	.+68     	; 0x59a <GLCD_Line+0xf4>
 556:	84 17       	cp	r24, r20
 558:	80 f4       	brcc	.+32     	; 0x57a <GLCD_Line+0xd4>
 55a:	c8 2f       	mov	r28, r24
 55c:	d0 e0       	ldi	r29, 0x00	; 0
 55e:	e4 2e       	mov	r14, r20
 560:	f1 2c       	mov	r15, r1
 562:	ec 16       	cp	r14, r28
 564:	fd 06       	cpc	r15, r29
 566:	d4 f0       	brlt	.+52     	; 0x59c <GLCD_Line+0xf6>
 568:	16 2f       	mov	r17, r22
 56a:	61 2f       	mov	r22, r17
 56c:	8c 2f       	mov	r24, r28
 56e:	27 df       	rcall	.-434    	; 0x3be <GLCD_Dot>
 570:	21 96       	adiw	r28, 0x01	; 1
 572:	ec 16       	cp	r14, r28
 574:	fd 06       	cpc	r15, r29
 576:	cc f7       	brge	.-14     	; 0x56a <GLCD_Line+0xc4>
 578:	11 c0       	rjmp	.+34     	; 0x59c <GLCD_Line+0xf6>
 57a:	c8 2f       	mov	r28, r24
 57c:	d0 e0       	ldi	r29, 0x00	; 0
 57e:	e4 2e       	mov	r14, r20
 580:	f1 2c       	mov	r15, r1
 582:	ce 15       	cp	r28, r14
 584:	df 05       	cpc	r29, r15
 586:	54 f0       	brlt	.+20     	; 0x59c <GLCD_Line+0xf6>
 588:	16 2f       	mov	r17, r22
 58a:	61 2f       	mov	r22, r17
 58c:	8c 2f       	mov	r24, r28
 58e:	17 df       	rcall	.-466    	; 0x3be <GLCD_Dot>
 590:	21 97       	sbiw	r28, 0x01	; 1
 592:	ce 15       	cp	r28, r14
 594:	df 05       	cpc	r29, r15
 596:	cc f7       	brge	.-14     	; 0x58a <GLCD_Line+0xe4>
 598:	01 c0       	rjmp	.+2      	; 0x59c <GLCD_Line+0xf6>
 59a:	11 df       	rcall	.-478    	; 0x3be <GLCD_Dot>
 59c:	df 91       	pop	r29
 59e:	cf 91       	pop	r28
 5a0:	1f 91       	pop	r17
 5a2:	0f 91       	pop	r16
 5a4:	ff 90       	pop	r15
 5a6:	ef 90       	pop	r14
 5a8:	df 90       	pop	r13
 5aa:	cf 90       	pop	r12
 5ac:	bf 90       	pop	r11
 5ae:	af 90       	pop	r10
 5b0:	9f 90       	pop	r9
 5b2:	8f 90       	pop	r8
 5b4:	08 95       	ret

000005b6 <GLCD_Circle>:
 5b6:	2f 92       	push	r2
 5b8:	3f 92       	push	r3
 5ba:	4f 92       	push	r4
 5bc:	5f 92       	push	r5
 5be:	6f 92       	push	r6
 5c0:	7f 92       	push	r7
 5c2:	8f 92       	push	r8
 5c4:	9f 92       	push	r9
 5c6:	af 92       	push	r10
 5c8:	bf 92       	push	r11
 5ca:	cf 92       	push	r12
 5cc:	df 92       	push	r13
 5ce:	ef 92       	push	r14
 5d0:	ff 92       	push	r15
 5d2:	0f 93       	push	r16
 5d4:	1f 93       	push	r17
 5d6:	cf 93       	push	r28
 5d8:	df 93       	push	r29
 5da:	38 2e       	mov	r3, r24
 5dc:	26 2e       	mov	r2, r22
 5de:	06 2f       	mov	r16, r22
 5e0:	10 e0       	ldi	r17, 0x00	; 0
 5e2:	64 2e       	mov	r6, r20
 5e4:	71 2c       	mov	r7, r1
 5e6:	23 01       	movw	r4, r6
 5e8:	44 0c       	add	r4, r4
 5ea:	55 1c       	adc	r5, r5
 5ec:	46 0c       	add	r4, r6
 5ee:	57 1c       	adc	r5, r7
 5f0:	55 94       	asr	r5
 5f2:	47 94       	ror	r4
 5f4:	55 94       	asr	r5
 5f6:	47 94       	ror	r4
 5f8:	e8 01       	movw	r28, r16
 5fa:	c4 19       	sub	r28, r4
 5fc:	d5 09       	sbc	r29, r5
 5fe:	04 0d       	add	r16, r4
 600:	15 1d       	adc	r17, r5
 602:	0c 17       	cp	r16, r28
 604:	1d 07       	cpc	r17, r29
 606:	7c f1       	brlt	.+94     	; 0x666 <GLCD_Circle+0xb0>
 608:	66 9c       	mul	r6, r6
 60a:	60 01       	movw	r12, r0
 60c:	67 9c       	mul	r6, r7
 60e:	d0 0c       	add	r13, r0
 610:	d0 0c       	add	r13, r0
 612:	11 24       	eor	r1, r1
 614:	e6 2e       	mov	r14, r22
 616:	f1 2c       	mov	r15, r1
 618:	ce 01       	movw	r24, r28
 61a:	8e 19       	sub	r24, r14
 61c:	9f 09       	sbc	r25, r15
 61e:	88 9f       	mul	r24, r24
 620:	90 01       	movw	r18, r0
 622:	89 9f       	mul	r24, r25
 624:	30 0d       	add	r19, r0
 626:	30 0d       	add	r19, r0
 628:	11 24       	eor	r1, r1
 62a:	46 01       	movw	r8, r12
 62c:	82 1a       	sub	r8, r18
 62e:	93 0a       	sbc	r9, r19
 630:	09 2c       	mov	r0, r9
 632:	00 0c       	add	r0, r0
 634:	aa 08       	sbc	r10, r10
 636:	bb 08       	sbc	r11, r11
 638:	c5 01       	movw	r24, r10
 63a:	b4 01       	movw	r22, r8
 63c:	88 d1       	rcall	.+784    	; 0x94e <__floatsisf>
 63e:	17 d2       	rcall	.+1070   	; 0xa6e <sqrt>
 640:	20 e0       	ldi	r18, 0x00	; 0
 642:	30 e0       	ldi	r19, 0x00	; 0
 644:	40 e0       	ldi	r20, 0x00	; 0
 646:	5f e3       	ldi	r21, 0x3F	; 63
 648:	f0 d0       	rcall	.+480    	; 0x82a <__addsf3>
 64a:	53 d1       	rcall	.+678    	; 0x8f2 <__fixunssfsi>
 64c:	b6 2e       	mov	r11, r22
 64e:	6c 2f       	mov	r22, r28
 650:	83 2d       	mov	r24, r3
 652:	8b 0d       	add	r24, r11
 654:	b4 de       	rcall	.-664    	; 0x3be <GLCD_Dot>
 656:	6c 2f       	mov	r22, r28
 658:	83 2d       	mov	r24, r3
 65a:	8b 19       	sub	r24, r11
 65c:	b0 de       	rcall	.-672    	; 0x3be <GLCD_Dot>
 65e:	21 96       	adiw	r28, 0x01	; 1
 660:	0c 17       	cp	r16, r28
 662:	1d 07       	cpc	r17, r29
 664:	cc f6       	brge	.-78     	; 0x618 <GLCD_Circle+0x62>
 666:	83 2d       	mov	r24, r3
 668:	90 e0       	ldi	r25, 0x00	; 0
 66a:	ec 01       	movw	r28, r24
 66c:	c4 19       	sub	r28, r4
 66e:	d5 09       	sbc	r29, r5
 670:	48 0e       	add	r4, r24
 672:	59 1e       	adc	r5, r25
 674:	4c 16       	cp	r4, r28
 676:	5d 06       	cpc	r5, r29
 678:	74 f1       	brlt	.+92     	; 0x6d6 <GLCD_Circle+0x120>
 67a:	66 9c       	mul	r6, r6
 67c:	80 01       	movw	r16, r0
 67e:	67 9c       	mul	r6, r7
 680:	10 0d       	add	r17, r0
 682:	10 0d       	add	r17, r0
 684:	11 24       	eor	r1, r1
 686:	7c 01       	movw	r14, r24
 688:	ce 01       	movw	r24, r28
 68a:	8e 19       	sub	r24, r14
 68c:	9f 09       	sbc	r25, r15
 68e:	88 9f       	mul	r24, r24
 690:	90 01       	movw	r18, r0
 692:	89 9f       	mul	r24, r25
 694:	30 0d       	add	r19, r0
 696:	30 0d       	add	r19, r0
 698:	11 24       	eor	r1, r1
 69a:	48 01       	movw	r8, r16
 69c:	82 1a       	sub	r8, r18
 69e:	93 0a       	sbc	r9, r19
 6a0:	09 2c       	mov	r0, r9
 6a2:	00 0c       	add	r0, r0
 6a4:	aa 08       	sbc	r10, r10
 6a6:	bb 08       	sbc	r11, r11
 6a8:	c5 01       	movw	r24, r10
 6aa:	b4 01       	movw	r22, r8
 6ac:	50 d1       	rcall	.+672    	; 0x94e <__floatsisf>
 6ae:	df d1       	rcall	.+958    	; 0xa6e <sqrt>
 6b0:	20 e0       	ldi	r18, 0x00	; 0
 6b2:	30 e0       	ldi	r19, 0x00	; 0
 6b4:	40 e0       	ldi	r20, 0x00	; 0
 6b6:	5f e3       	ldi	r21, 0x3F	; 63
 6b8:	b8 d0       	rcall	.+368    	; 0x82a <__addsf3>
 6ba:	1b d1       	rcall	.+566    	; 0x8f2 <__fixunssfsi>
 6bc:	d6 2e       	mov	r13, r22
 6be:	62 2d       	mov	r22, r2
 6c0:	6d 0d       	add	r22, r13
 6c2:	8c 2f       	mov	r24, r28
 6c4:	7c de       	rcall	.-776    	; 0x3be <GLCD_Dot>
 6c6:	62 2d       	mov	r22, r2
 6c8:	6d 19       	sub	r22, r13
 6ca:	8c 2f       	mov	r24, r28
 6cc:	78 de       	rcall	.-784    	; 0x3be <GLCD_Dot>
 6ce:	21 96       	adiw	r28, 0x01	; 1
 6d0:	4c 16       	cp	r4, r28
 6d2:	5d 06       	cpc	r5, r29
 6d4:	cc f6       	brge	.-78     	; 0x688 <GLCD_Circle+0xd2>
 6d6:	df 91       	pop	r29
 6d8:	cf 91       	pop	r28
 6da:	1f 91       	pop	r17
 6dc:	0f 91       	pop	r16
 6de:	ff 90       	pop	r15
 6e0:	ef 90       	pop	r14
 6e2:	df 90       	pop	r13
 6e4:	cf 90       	pop	r12
 6e6:	bf 90       	pop	r11
 6e8:	af 90       	pop	r10
 6ea:	9f 90       	pop	r9
 6ec:	8f 90       	pop	r8
 6ee:	7f 90       	pop	r7
 6f0:	6f 90       	pop	r6
 6f2:	5f 90       	pop	r5
 6f4:	4f 90       	pop	r4
 6f6:	3f 90       	pop	r3
 6f8:	2f 90       	pop	r2
 6fa:	08 95       	ret

000006fc <GLCD_1DigitDecimal>:
 6fc:	9d ec       	ldi	r25, 0xCD	; 205
 6fe:	89 9f       	mul	r24, r25
 700:	91 2d       	mov	r25, r1
 702:	11 24       	eor	r1, r1
 704:	96 95       	lsr	r25
 706:	96 95       	lsr	r25
 708:	96 95       	lsr	r25
 70a:	99 0f       	add	r25, r25
 70c:	29 2f       	mov	r18, r25
 70e:	22 0f       	add	r18, r18
 710:	22 0f       	add	r18, r18
 712:	92 0f       	add	r25, r18
 714:	89 1b       	sub	r24, r25
 716:	98 2f       	mov	r25, r24
 718:	31 f4       	brne	.+12     	; 0x726 <GLCD_1DigitDecimal+0x2a>
 71a:	61 11       	cpse	r22, r1
 71c:	04 c0       	rjmp	.+8      	; 0x726 <GLCD_1DigitDecimal+0x2a>
 71e:	80 e2       	ldi	r24, 0x20	; 32
 720:	f9 dd       	rcall	.-1038   	; 0x314 <lcd_char>
 722:	80 e0       	ldi	r24, 0x00	; 0
 724:	08 95       	ret
 726:	80 e3       	ldi	r24, 0x30	; 48
 728:	89 0f       	add	r24, r25
 72a:	f4 dd       	rcall	.-1048   	; 0x314 <lcd_char>
 72c:	81 e0       	ldi	r24, 0x01	; 1
 72e:	08 95       	ret

00000730 <GLCD_4DigitDecimal>:

	// display 4-digit decimal number
	// 4자리의 10진수 값을 표시합니다.
	void GLCD_4DigitDecimal(unsigned int number)
	{
 730:	0f 93       	push	r16
 732:	1f 93       	push	r17
 734:	cf 93       	push	r28
 736:	df 93       	push	r29
 738:	ac 01       	movw	r20, r24
		unsigned int i;
		unsigned char flag;
		flag = 0;
		number = number % 10000;
 73a:	9c 01       	movw	r18, r24
 73c:	32 95       	swap	r19
 73e:	22 95       	swap	r18
 740:	2f 70       	andi	r18, 0x0F	; 15
 742:	23 27       	eor	r18, r19
 744:	3f 70       	andi	r19, 0x0F	; 15
 746:	23 27       	eor	r18, r19
 748:	a7 e4       	ldi	r26, 0x47	; 71
 74a:	b3 e0       	ldi	r27, 0x03	; 3
 74c:	f6 d1       	rcall	.+1004   	; 0xb3a <__umulhisi3>
 74e:	ec 01       	movw	r28, r24
 750:	d6 95       	lsr	r29
 752:	c7 95       	ror	r28
 754:	d6 95       	lsr	r29
 756:	c7 95       	ror	r28
 758:	d6 95       	lsr	r29
 75a:	c7 95       	ror	r28
 75c:	20 e1       	ldi	r18, 0x10	; 16
 75e:	37 e2       	ldi	r19, 0x27	; 39
 760:	c2 9f       	mul	r28, r18
 762:	c0 01       	movw	r24, r0
 764:	c3 9f       	mul	r28, r19
 766:	90 0d       	add	r25, r0
 768:	d2 9f       	mul	r29, r18
 76a:	90 0d       	add	r25, r0
 76c:	11 24       	eor	r1, r1
 76e:	ea 01       	movw	r28, r20
 770:	c8 1b       	sub	r28, r24
 772:	d9 0b       	sbc	r29, r25
		i = number/1000;
		flag = GLCD_1DigitDecimal(i, flag); // 10^3
 774:	9e 01       	movw	r18, r28
 776:	36 95       	lsr	r19
 778:	27 95       	ror	r18
 77a:	36 95       	lsr	r19
 77c:	27 95       	ror	r18
 77e:	36 95       	lsr	r19
 780:	27 95       	ror	r18
 782:	a5 ec       	ldi	r26, 0xC5	; 197
 784:	b0 e2       	ldi	r27, 0x20	; 32
 786:	d9 d1       	rcall	.+946    	; 0xb3a <__umulhisi3>
 788:	8c 01       	movw	r16, r24
 78a:	12 95       	swap	r17
 78c:	02 95       	swap	r16
 78e:	0f 70       	andi	r16, 0x0F	; 15
 790:	01 27       	eor	r16, r17
 792:	1f 70       	andi	r17, 0x0F	; 15
 794:	01 27       	eor	r16, r17
 796:	60 e0       	ldi	r22, 0x00	; 0
 798:	80 2f       	mov	r24, r16
 79a:	b0 df       	rcall	.-160    	; 0x6fc <GLCD_1DigitDecimal>
 79c:	48 2f       	mov	r20, r24
		number = number % 1000;
 79e:	28 ee       	ldi	r18, 0xE8	; 232
 7a0:	33 e0       	ldi	r19, 0x03	; 3
 7a2:	02 9f       	mul	r16, r18
 7a4:	c0 01       	movw	r24, r0
 7a6:	03 9f       	mul	r16, r19
 7a8:	90 0d       	add	r25, r0
 7aa:	12 9f       	mul	r17, r18
 7ac:	90 0d       	add	r25, r0
 7ae:	11 24       	eor	r1, r1
 7b0:	c8 1b       	sub	r28, r24
 7b2:	d9 0b       	sbc	r29, r25
		i = number/100;
		flag = GLCD_1DigitDecimal(i, flag); // 10^2
 7b4:	9e 01       	movw	r18, r28
 7b6:	36 95       	lsr	r19
 7b8:	27 95       	ror	r18
 7ba:	36 95       	lsr	r19
 7bc:	27 95       	ror	r18
 7be:	ab e7       	ldi	r26, 0x7B	; 123
 7c0:	b4 e1       	ldi	r27, 0x14	; 20
 7c2:	bb d1       	rcall	.+886    	; 0xb3a <__umulhisi3>
 7c4:	8c 01       	movw	r16, r24
 7c6:	16 95       	lsr	r17
 7c8:	07 95       	ror	r16
 7ca:	64 2f       	mov	r22, r20
 7cc:	80 2f       	mov	r24, r16
 7ce:	96 df       	rcall	.-212    	; 0x6fc <GLCD_1DigitDecimal>
 7d0:	48 2f       	mov	r20, r24
		number = number % 100;
 7d2:	24 e6       	ldi	r18, 0x64	; 100
 7d4:	20 9f       	mul	r18, r16
 7d6:	c0 01       	movw	r24, r0
 7d8:	21 9f       	mul	r18, r17
 7da:	90 0d       	add	r25, r0
 7dc:	11 24       	eor	r1, r1
 7de:	c8 1b       	sub	r28, r24
		i = number/10;
		flag = GLCD_1DigitDecimal(i, flag); // 10^1
 7e0:	d9 0b       	sbc	r29, r25
 7e2:	9e 01       	movw	r18, r28
 7e4:	ad ec       	ldi	r26, 0xCD	; 205
 7e6:	bc ec       	ldi	r27, 0xCC	; 204
 7e8:	a8 d1       	rcall	.+848    	; 0xb3a <__umulhisi3>
 7ea:	8c 01       	movw	r16, r24
 7ec:	16 95       	lsr	r17
 7ee:	07 95       	ror	r16
 7f0:	16 95       	lsr	r17
 7f2:	07 95       	ror	r16
 7f4:	16 95       	lsr	r17
 7f6:	07 95       	ror	r16
 7f8:	64 2f       	mov	r22, r20
 7fa:	80 2f       	mov	r24, r16
 7fc:	7f df       	rcall	.-258    	; 0x6fc <GLCD_1DigitDecimal>
		i = number % 10;
		lcd_char(i + '0');              // 10^0
 7fe:	c8 01       	movw	r24, r16
 800:	88 0f       	add	r24, r24
 802:	99 1f       	adc	r25, r25
 804:	00 0f       	add	r16, r16
 806:	11 1f       	adc	r17, r17
 808:	00 0f       	add	r16, r16
 80a:	11 1f       	adc	r17, r17
 80c:	00 0f       	add	r16, r16
 80e:	11 1f       	adc	r17, r17
 810:	08 0f       	add	r16, r24
 812:	19 1f       	adc	r17, r25
 814:	ce 01       	movw	r24, r28
 816:	80 1b       	sub	r24, r16
 818:	91 0b       	sbc	r25, r17
 81a:	80 5d       	subi	r24, 0xD0	; 208
 81c:	7b dd       	rcall	.-1290   	; 0x314 <lcd_char>
	}
 81e:	df 91       	pop	r29
 820:	cf 91       	pop	r28
 822:	1f 91       	pop	r17
 824:	0f 91       	pop	r16
 826:	08 95       	ret

00000828 <__subsf3>:
 828:	50 58       	subi	r21, 0x80	; 128

0000082a <__addsf3>:
 82a:	bb 27       	eor	r27, r27
 82c:	aa 27       	eor	r26, r26
 82e:	0e d0       	rcall	.+28     	; 0x84c <__addsf3x>
 830:	e0 c0       	rjmp	.+448    	; 0x9f2 <__fp_round>
 832:	d1 d0       	rcall	.+418    	; 0x9d6 <__fp_pscA>
 834:	30 f0       	brcs	.+12     	; 0x842 <__addsf3+0x18>
 836:	d6 d0       	rcall	.+428    	; 0x9e4 <__fp_pscB>
 838:	20 f0       	brcs	.+8      	; 0x842 <__addsf3+0x18>
 83a:	31 f4       	brne	.+12     	; 0x848 <__addsf3+0x1e>
 83c:	9f 3f       	cpi	r25, 0xFF	; 255
 83e:	11 f4       	brne	.+4      	; 0x844 <__addsf3+0x1a>
 840:	1e f4       	brtc	.+6      	; 0x848 <__addsf3+0x1e>
 842:	c6 c0       	rjmp	.+396    	; 0x9d0 <__fp_nan>
 844:	0e f4       	brtc	.+2      	; 0x848 <__addsf3+0x1e>
 846:	e0 95       	com	r30
 848:	e7 fb       	bst	r30, 7
 84a:	bc c0       	rjmp	.+376    	; 0x9c4 <__fp_inf>

0000084c <__addsf3x>:
 84c:	e9 2f       	mov	r30, r25
 84e:	e2 d0       	rcall	.+452    	; 0xa14 <__fp_split3>
 850:	80 f3       	brcs	.-32     	; 0x832 <__addsf3+0x8>
 852:	ba 17       	cp	r27, r26
 854:	62 07       	cpc	r22, r18
 856:	73 07       	cpc	r23, r19
 858:	84 07       	cpc	r24, r20
 85a:	95 07       	cpc	r25, r21
 85c:	18 f0       	brcs	.+6      	; 0x864 <__addsf3x+0x18>
 85e:	71 f4       	brne	.+28     	; 0x87c <__addsf3x+0x30>
 860:	9e f5       	brtc	.+102    	; 0x8c8 <__addsf3x+0x7c>
 862:	fa c0       	rjmp	.+500    	; 0xa58 <__fp_zero>
 864:	0e f4       	brtc	.+2      	; 0x868 <__addsf3x+0x1c>
 866:	e0 95       	com	r30
 868:	0b 2e       	mov	r0, r27
 86a:	ba 2f       	mov	r27, r26
 86c:	a0 2d       	mov	r26, r0
 86e:	0b 01       	movw	r0, r22
 870:	b9 01       	movw	r22, r18
 872:	90 01       	movw	r18, r0
 874:	0c 01       	movw	r0, r24
 876:	ca 01       	movw	r24, r20
 878:	a0 01       	movw	r20, r0
 87a:	11 24       	eor	r1, r1
 87c:	ff 27       	eor	r31, r31
 87e:	59 1b       	sub	r21, r25
 880:	99 f0       	breq	.+38     	; 0x8a8 <__addsf3x+0x5c>
 882:	59 3f       	cpi	r21, 0xF9	; 249
 884:	50 f4       	brcc	.+20     	; 0x89a <__addsf3x+0x4e>
 886:	50 3e       	cpi	r21, 0xE0	; 224
 888:	68 f1       	brcs	.+90     	; 0x8e4 <__addsf3x+0x98>
 88a:	1a 16       	cp	r1, r26
 88c:	f0 40       	sbci	r31, 0x00	; 0
 88e:	a2 2f       	mov	r26, r18
 890:	23 2f       	mov	r18, r19
 892:	34 2f       	mov	r19, r20
 894:	44 27       	eor	r20, r20
 896:	58 5f       	subi	r21, 0xF8	; 248
 898:	f3 cf       	rjmp	.-26     	; 0x880 <__addsf3x+0x34>
 89a:	46 95       	lsr	r20
 89c:	37 95       	ror	r19
 89e:	27 95       	ror	r18
 8a0:	a7 95       	ror	r26
 8a2:	f0 40       	sbci	r31, 0x00	; 0
 8a4:	53 95       	inc	r21
 8a6:	c9 f7       	brne	.-14     	; 0x89a <__addsf3x+0x4e>
 8a8:	7e f4       	brtc	.+30     	; 0x8c8 <__addsf3x+0x7c>
 8aa:	1f 16       	cp	r1, r31
 8ac:	ba 0b       	sbc	r27, r26
 8ae:	62 0b       	sbc	r22, r18
 8b0:	73 0b       	sbc	r23, r19
 8b2:	84 0b       	sbc	r24, r20
 8b4:	ba f0       	brmi	.+46     	; 0x8e4 <__addsf3x+0x98>
 8b6:	91 50       	subi	r25, 0x01	; 1
 8b8:	a1 f0       	breq	.+40     	; 0x8e2 <__addsf3x+0x96>
 8ba:	ff 0f       	add	r31, r31
 8bc:	bb 1f       	adc	r27, r27
 8be:	66 1f       	adc	r22, r22
 8c0:	77 1f       	adc	r23, r23
 8c2:	88 1f       	adc	r24, r24
 8c4:	c2 f7       	brpl	.-16     	; 0x8b6 <__addsf3x+0x6a>
 8c6:	0e c0       	rjmp	.+28     	; 0x8e4 <__addsf3x+0x98>
 8c8:	ba 0f       	add	r27, r26
 8ca:	62 1f       	adc	r22, r18
 8cc:	73 1f       	adc	r23, r19
 8ce:	84 1f       	adc	r24, r20
 8d0:	48 f4       	brcc	.+18     	; 0x8e4 <__addsf3x+0x98>
 8d2:	87 95       	ror	r24
 8d4:	77 95       	ror	r23
 8d6:	67 95       	ror	r22
 8d8:	b7 95       	ror	r27
 8da:	f7 95       	ror	r31
 8dc:	9e 3f       	cpi	r25, 0xFE	; 254
 8de:	08 f0       	brcs	.+2      	; 0x8e2 <__addsf3x+0x96>
 8e0:	b3 cf       	rjmp	.-154    	; 0x848 <__addsf3+0x1e>
 8e2:	93 95       	inc	r25
 8e4:	88 0f       	add	r24, r24
 8e6:	08 f0       	brcs	.+2      	; 0x8ea <__addsf3x+0x9e>
 8e8:	99 27       	eor	r25, r25
 8ea:	ee 0f       	add	r30, r30
 8ec:	97 95       	ror	r25
 8ee:	87 95       	ror	r24
 8f0:	08 95       	ret

000008f2 <__fixunssfsi>:
 8f2:	98 d0       	rcall	.+304    	; 0xa24 <__fp_splitA>
 8f4:	88 f0       	brcs	.+34     	; 0x918 <__fixunssfsi+0x26>
 8f6:	9f 57       	subi	r25, 0x7F	; 127
 8f8:	90 f0       	brcs	.+36     	; 0x91e <__fixunssfsi+0x2c>
 8fa:	b9 2f       	mov	r27, r25
 8fc:	99 27       	eor	r25, r25
 8fe:	b7 51       	subi	r27, 0x17	; 23
 900:	a0 f0       	brcs	.+40     	; 0x92a <__fixunssfsi+0x38>
 902:	d1 f0       	breq	.+52     	; 0x938 <__fixunssfsi+0x46>
 904:	66 0f       	add	r22, r22
 906:	77 1f       	adc	r23, r23
 908:	88 1f       	adc	r24, r24
 90a:	99 1f       	adc	r25, r25
 90c:	1a f0       	brmi	.+6      	; 0x914 <__fixunssfsi+0x22>
 90e:	ba 95       	dec	r27
 910:	c9 f7       	brne	.-14     	; 0x904 <__fixunssfsi+0x12>
 912:	12 c0       	rjmp	.+36     	; 0x938 <__fixunssfsi+0x46>
 914:	b1 30       	cpi	r27, 0x01	; 1
 916:	81 f0       	breq	.+32     	; 0x938 <__fixunssfsi+0x46>
 918:	9f d0       	rcall	.+318    	; 0xa58 <__fp_zero>
 91a:	b1 e0       	ldi	r27, 0x01	; 1
 91c:	08 95       	ret
 91e:	9c c0       	rjmp	.+312    	; 0xa58 <__fp_zero>
 920:	67 2f       	mov	r22, r23
 922:	78 2f       	mov	r23, r24
 924:	88 27       	eor	r24, r24
 926:	b8 5f       	subi	r27, 0xF8	; 248
 928:	39 f0       	breq	.+14     	; 0x938 <__fixunssfsi+0x46>
 92a:	b9 3f       	cpi	r27, 0xF9	; 249
 92c:	cc f3       	brlt	.-14     	; 0x920 <__fixunssfsi+0x2e>
 92e:	86 95       	lsr	r24
 930:	77 95       	ror	r23
 932:	67 95       	ror	r22
 934:	b3 95       	inc	r27
 936:	d9 f7       	brne	.-10     	; 0x92e <__fixunssfsi+0x3c>
 938:	3e f4       	brtc	.+14     	; 0x948 <__fixunssfsi+0x56>
 93a:	90 95       	com	r25
 93c:	80 95       	com	r24
 93e:	70 95       	com	r23
 940:	61 95       	neg	r22
 942:	7f 4f       	sbci	r23, 0xFF	; 255
 944:	8f 4f       	sbci	r24, 0xFF	; 255
 946:	9f 4f       	sbci	r25, 0xFF	; 255
 948:	08 95       	ret

0000094a <__floatunsisf>:
 94a:	e8 94       	clt
 94c:	09 c0       	rjmp	.+18     	; 0x960 <__floatsisf+0x12>

0000094e <__floatsisf>:
 94e:	97 fb       	bst	r25, 7
 950:	3e f4       	brtc	.+14     	; 0x960 <__floatsisf+0x12>
 952:	90 95       	com	r25
 954:	80 95       	com	r24
 956:	70 95       	com	r23
 958:	61 95       	neg	r22
 95a:	7f 4f       	sbci	r23, 0xFF	; 255
 95c:	8f 4f       	sbci	r24, 0xFF	; 255
 95e:	9f 4f       	sbci	r25, 0xFF	; 255
 960:	99 23       	and	r25, r25
 962:	a9 f0       	breq	.+42     	; 0x98e <__floatsisf+0x40>
 964:	f9 2f       	mov	r31, r25
 966:	96 e9       	ldi	r25, 0x96	; 150
 968:	bb 27       	eor	r27, r27
 96a:	93 95       	inc	r25
 96c:	f6 95       	lsr	r31
 96e:	87 95       	ror	r24
 970:	77 95       	ror	r23
 972:	67 95       	ror	r22
 974:	b7 95       	ror	r27
 976:	f1 11       	cpse	r31, r1
 978:	f8 cf       	rjmp	.-16     	; 0x96a <__floatsisf+0x1c>
 97a:	fa f4       	brpl	.+62     	; 0x9ba <__floatsisf+0x6c>
 97c:	bb 0f       	add	r27, r27
 97e:	11 f4       	brne	.+4      	; 0x984 <__floatsisf+0x36>
 980:	60 ff       	sbrs	r22, 0
 982:	1b c0       	rjmp	.+54     	; 0x9ba <__floatsisf+0x6c>
 984:	6f 5f       	subi	r22, 0xFF	; 255
 986:	7f 4f       	sbci	r23, 0xFF	; 255
 988:	8f 4f       	sbci	r24, 0xFF	; 255
 98a:	9f 4f       	sbci	r25, 0xFF	; 255
 98c:	16 c0       	rjmp	.+44     	; 0x9ba <__floatsisf+0x6c>
 98e:	88 23       	and	r24, r24
 990:	11 f0       	breq	.+4      	; 0x996 <__floatsisf+0x48>
 992:	96 e9       	ldi	r25, 0x96	; 150
 994:	11 c0       	rjmp	.+34     	; 0x9b8 <__floatsisf+0x6a>
 996:	77 23       	and	r23, r23
 998:	21 f0       	breq	.+8      	; 0x9a2 <__floatsisf+0x54>
 99a:	9e e8       	ldi	r25, 0x8E	; 142
 99c:	87 2f       	mov	r24, r23
 99e:	76 2f       	mov	r23, r22
 9a0:	05 c0       	rjmp	.+10     	; 0x9ac <__floatsisf+0x5e>
 9a2:	66 23       	and	r22, r22
 9a4:	71 f0       	breq	.+28     	; 0x9c2 <__floatsisf+0x74>
 9a6:	96 e8       	ldi	r25, 0x86	; 134
 9a8:	86 2f       	mov	r24, r22
 9aa:	70 e0       	ldi	r23, 0x00	; 0
 9ac:	60 e0       	ldi	r22, 0x00	; 0
 9ae:	2a f0       	brmi	.+10     	; 0x9ba <__floatsisf+0x6c>
 9b0:	9a 95       	dec	r25
 9b2:	66 0f       	add	r22, r22
 9b4:	77 1f       	adc	r23, r23
 9b6:	88 1f       	adc	r24, r24
 9b8:	da f7       	brpl	.-10     	; 0x9b0 <__floatsisf+0x62>
 9ba:	88 0f       	add	r24, r24
 9bc:	96 95       	lsr	r25
 9be:	87 95       	ror	r24
 9c0:	97 f9       	bld	r25, 7
 9c2:	08 95       	ret

000009c4 <__fp_inf>:
 9c4:	97 f9       	bld	r25, 7
 9c6:	9f 67       	ori	r25, 0x7F	; 127
 9c8:	80 e8       	ldi	r24, 0x80	; 128
 9ca:	70 e0       	ldi	r23, 0x00	; 0
 9cc:	60 e0       	ldi	r22, 0x00	; 0
 9ce:	08 95       	ret

000009d0 <__fp_nan>:
 9d0:	9f ef       	ldi	r25, 0xFF	; 255
 9d2:	80 ec       	ldi	r24, 0xC0	; 192
 9d4:	08 95       	ret

000009d6 <__fp_pscA>:
 9d6:	00 24       	eor	r0, r0
 9d8:	0a 94       	dec	r0
 9da:	16 16       	cp	r1, r22
 9dc:	17 06       	cpc	r1, r23
 9de:	18 06       	cpc	r1, r24
 9e0:	09 06       	cpc	r0, r25
 9e2:	08 95       	ret

000009e4 <__fp_pscB>:
 9e4:	00 24       	eor	r0, r0
 9e6:	0a 94       	dec	r0
 9e8:	12 16       	cp	r1, r18
 9ea:	13 06       	cpc	r1, r19
 9ec:	14 06       	cpc	r1, r20
 9ee:	05 06       	cpc	r0, r21
 9f0:	08 95       	ret

000009f2 <__fp_round>:
 9f2:	09 2e       	mov	r0, r25
 9f4:	03 94       	inc	r0
 9f6:	00 0c       	add	r0, r0
 9f8:	11 f4       	brne	.+4      	; 0x9fe <__fp_round+0xc>
 9fa:	88 23       	and	r24, r24
 9fc:	52 f0       	brmi	.+20     	; 0xa12 <__fp_round+0x20>
 9fe:	bb 0f       	add	r27, r27
 a00:	40 f4       	brcc	.+16     	; 0xa12 <__fp_round+0x20>
 a02:	bf 2b       	or	r27, r31
 a04:	11 f4       	brne	.+4      	; 0xa0a <__fp_round+0x18>
 a06:	60 ff       	sbrs	r22, 0
 a08:	04 c0       	rjmp	.+8      	; 0xa12 <__fp_round+0x20>
 a0a:	6f 5f       	subi	r22, 0xFF	; 255
 a0c:	7f 4f       	sbci	r23, 0xFF	; 255
 a0e:	8f 4f       	sbci	r24, 0xFF	; 255
 a10:	9f 4f       	sbci	r25, 0xFF	; 255
 a12:	08 95       	ret

00000a14 <__fp_split3>:
 a14:	57 fd       	sbrc	r21, 7
 a16:	90 58       	subi	r25, 0x80	; 128
 a18:	44 0f       	add	r20, r20
 a1a:	55 1f       	adc	r21, r21
 a1c:	59 f0       	breq	.+22     	; 0xa34 <__fp_splitA+0x10>
 a1e:	5f 3f       	cpi	r21, 0xFF	; 255
 a20:	71 f0       	breq	.+28     	; 0xa3e <__fp_splitA+0x1a>
 a22:	47 95       	ror	r20

00000a24 <__fp_splitA>:
 a24:	88 0f       	add	r24, r24
 a26:	97 fb       	bst	r25, 7
 a28:	99 1f       	adc	r25, r25
 a2a:	61 f0       	breq	.+24     	; 0xa44 <__fp_splitA+0x20>
 a2c:	9f 3f       	cpi	r25, 0xFF	; 255
 a2e:	79 f0       	breq	.+30     	; 0xa4e <__fp_splitA+0x2a>
 a30:	87 95       	ror	r24
 a32:	08 95       	ret
 a34:	12 16       	cp	r1, r18
 a36:	13 06       	cpc	r1, r19
 a38:	14 06       	cpc	r1, r20
 a3a:	55 1f       	adc	r21, r21
 a3c:	f2 cf       	rjmp	.-28     	; 0xa22 <__fp_split3+0xe>
 a3e:	46 95       	lsr	r20
 a40:	f1 df       	rcall	.-30     	; 0xa24 <__fp_splitA>
 a42:	08 c0       	rjmp	.+16     	; 0xa54 <__fp_splitA+0x30>
 a44:	16 16       	cp	r1, r22
 a46:	17 06       	cpc	r1, r23
 a48:	18 06       	cpc	r1, r24
 a4a:	99 1f       	adc	r25, r25
 a4c:	f1 cf       	rjmp	.-30     	; 0xa30 <__fp_splitA+0xc>
 a4e:	86 95       	lsr	r24
 a50:	71 05       	cpc	r23, r1
 a52:	61 05       	cpc	r22, r1
 a54:	08 94       	sec
 a56:	08 95       	ret

00000a58 <__fp_zero>:
 a58:	e8 94       	clt

00000a5a <__fp_szero>:
 a5a:	bb 27       	eor	r27, r27
 a5c:	66 27       	eor	r22, r22
 a5e:	77 27       	eor	r23, r23
 a60:	cb 01       	movw	r24, r22
 a62:	97 f9       	bld	r25, 7
 a64:	08 95       	ret
 a66:	11 f4       	brne	.+4      	; 0xa6c <__fp_szero+0x12>
 a68:	0e f4       	brtc	.+2      	; 0xa6c <__fp_szero+0x12>
 a6a:	b2 cf       	rjmp	.-156    	; 0x9d0 <__fp_nan>
 a6c:	3e c0       	rjmp	.+124    	; 0xaea <__fp_mpack>

00000a6e <sqrt>:
 a6e:	da df       	rcall	.-76     	; 0xa24 <__fp_splitA>
 a70:	d0 f3       	brcs	.-12     	; 0xa66 <__fp_szero+0xc>
 a72:	99 23       	and	r25, r25
 a74:	d9 f3       	breq	.-10     	; 0xa6c <__fp_szero+0x12>
 a76:	ce f3       	brts	.-14     	; 0xa6a <__fp_szero+0x10>
 a78:	9f 57       	subi	r25, 0x7F	; 127
 a7a:	55 0b       	sbc	r21, r21
 a7c:	87 ff       	sbrs	r24, 7
 a7e:	43 d0       	rcall	.+134    	; 0xb06 <__fp_norm2>
 a80:	00 24       	eor	r0, r0
 a82:	a0 e6       	ldi	r26, 0x60	; 96
 a84:	40 ea       	ldi	r20, 0xA0	; 160
 a86:	90 01       	movw	r18, r0
 a88:	80 58       	subi	r24, 0x80	; 128
 a8a:	56 95       	lsr	r21
 a8c:	97 95       	ror	r25
 a8e:	28 f4       	brcc	.+10     	; 0xa9a <sqrt+0x2c>
 a90:	80 5c       	subi	r24, 0xC0	; 192
 a92:	66 0f       	add	r22, r22
 a94:	77 1f       	adc	r23, r23
 a96:	88 1f       	adc	r24, r24
 a98:	20 f0       	brcs	.+8      	; 0xaa2 <sqrt+0x34>
 a9a:	26 17       	cp	r18, r22
 a9c:	37 07       	cpc	r19, r23
 a9e:	48 07       	cpc	r20, r24
 aa0:	30 f4       	brcc	.+12     	; 0xaae <sqrt+0x40>
 aa2:	62 1b       	sub	r22, r18
 aa4:	73 0b       	sbc	r23, r19
 aa6:	84 0b       	sbc	r24, r20
 aa8:	20 29       	or	r18, r0
 aaa:	31 29       	or	r19, r1
 aac:	4a 2b       	or	r20, r26
 aae:	a6 95       	lsr	r26
 ab0:	17 94       	ror	r1
 ab2:	07 94       	ror	r0
 ab4:	20 25       	eor	r18, r0
 ab6:	31 25       	eor	r19, r1
 ab8:	4a 27       	eor	r20, r26
 aba:	58 f7       	brcc	.-42     	; 0xa92 <sqrt+0x24>
 abc:	66 0f       	add	r22, r22
 abe:	77 1f       	adc	r23, r23
 ac0:	88 1f       	adc	r24, r24
 ac2:	20 f0       	brcs	.+8      	; 0xacc <sqrt+0x5e>
 ac4:	26 17       	cp	r18, r22
 ac6:	37 07       	cpc	r19, r23
 ac8:	48 07       	cpc	r20, r24
 aca:	30 f4       	brcc	.+12     	; 0xad8 <sqrt+0x6a>
 acc:	62 0b       	sbc	r22, r18
 ace:	73 0b       	sbc	r23, r19
 ad0:	84 0b       	sbc	r24, r20
 ad2:	20 0d       	add	r18, r0
 ad4:	31 1d       	adc	r19, r1
 ad6:	41 1d       	adc	r20, r1
 ad8:	a0 95       	com	r26
 ada:	81 f7       	brne	.-32     	; 0xabc <sqrt+0x4e>
 adc:	b9 01       	movw	r22, r18
 ade:	84 2f       	mov	r24, r20
 ae0:	91 58       	subi	r25, 0x81	; 129
 ae2:	88 0f       	add	r24, r24
 ae4:	96 95       	lsr	r25
 ae6:	87 95       	ror	r24
 ae8:	08 95       	ret

00000aea <__fp_mpack>:
 aea:	9f 3f       	cpi	r25, 0xFF	; 255
 aec:	31 f0       	breq	.+12     	; 0xafa <__fp_mpack_finite+0xc>

00000aee <__fp_mpack_finite>:
 aee:	91 50       	subi	r25, 0x01	; 1
 af0:	20 f4       	brcc	.+8      	; 0xafa <__fp_mpack_finite+0xc>
 af2:	87 95       	ror	r24
 af4:	77 95       	ror	r23
 af6:	67 95       	ror	r22
 af8:	b7 95       	ror	r27
 afa:	88 0f       	add	r24, r24
 afc:	91 1d       	adc	r25, r1
 afe:	96 95       	lsr	r25
 b00:	87 95       	ror	r24
 b02:	97 f9       	bld	r25, 7
 b04:	08 95       	ret

00000b06 <__fp_norm2>:
 b06:	91 50       	subi	r25, 0x01	; 1
 b08:	50 40       	sbci	r21, 0x00	; 0
 b0a:	66 0f       	add	r22, r22
 b0c:	77 1f       	adc	r23, r23
 b0e:	88 1f       	adc	r24, r24
 b10:	d2 f7       	brpl	.-12     	; 0xb06 <__fp_norm2>
 b12:	08 95       	ret

00000b14 <__divmodhi4>:
 b14:	97 fb       	bst	r25, 7
 b16:	07 2e       	mov	r0, r23
 b18:	16 f4       	brtc	.+4      	; 0xb1e <__divmodhi4+0xa>
 b1a:	00 94       	com	r0
 b1c:	06 d0       	rcall	.+12     	; 0xb2a <__divmodhi4_neg1>
 b1e:	77 fd       	sbrc	r23, 7
 b20:	08 d0       	rcall	.+16     	; 0xb32 <__divmodhi4_neg2>
 b22:	1a d0       	rcall	.+52     	; 0xb58 <__udivmodhi4>
 b24:	07 fc       	sbrc	r0, 7
 b26:	05 d0       	rcall	.+10     	; 0xb32 <__divmodhi4_neg2>
 b28:	3e f4       	brtc	.+14     	; 0xb38 <__divmodhi4_exit>

00000b2a <__divmodhi4_neg1>:
 b2a:	90 95       	com	r25
 b2c:	81 95       	neg	r24
 b2e:	9f 4f       	sbci	r25, 0xFF	; 255
 b30:	08 95       	ret

00000b32 <__divmodhi4_neg2>:
 b32:	70 95       	com	r23
 b34:	61 95       	neg	r22
 b36:	7f 4f       	sbci	r23, 0xFF	; 255

00000b38 <__divmodhi4_exit>:
 b38:	08 95       	ret

00000b3a <__umulhisi3>:
 b3a:	a2 9f       	mul	r26, r18
 b3c:	b0 01       	movw	r22, r0
 b3e:	b3 9f       	mul	r27, r19
 b40:	c0 01       	movw	r24, r0
 b42:	a3 9f       	mul	r26, r19
 b44:	70 0d       	add	r23, r0
 b46:	81 1d       	adc	r24, r1
 b48:	11 24       	eor	r1, r1
 b4a:	91 1d       	adc	r25, r1
 b4c:	b2 9f       	mul	r27, r18
 b4e:	70 0d       	add	r23, r0
 b50:	81 1d       	adc	r24, r1
 b52:	11 24       	eor	r1, r1
 b54:	91 1d       	adc	r25, r1
 b56:	08 95       	ret

00000b58 <__udivmodhi4>:
 b58:	aa 1b       	sub	r26, r26
 b5a:	bb 1b       	sub	r27, r27
 b5c:	51 e1       	ldi	r21, 0x11	; 17
 b5e:	07 c0       	rjmp	.+14     	; 0xb6e <__udivmodhi4_ep>

00000b60 <__udivmodhi4_loop>:
 b60:	aa 1f       	adc	r26, r26
 b62:	bb 1f       	adc	r27, r27
 b64:	a6 17       	cp	r26, r22
 b66:	b7 07       	cpc	r27, r23
 b68:	10 f0       	brcs	.+4      	; 0xb6e <__udivmodhi4_ep>
 b6a:	a6 1b       	sub	r26, r22
 b6c:	b7 0b       	sbc	r27, r23

00000b6e <__udivmodhi4_ep>:
 b6e:	88 1f       	adc	r24, r24
 b70:	99 1f       	adc	r25, r25
 b72:	5a 95       	dec	r21
 b74:	a9 f7       	brne	.-22     	; 0xb60 <__udivmodhi4_loop>
 b76:	80 95       	com	r24
 b78:	90 95       	com	r25
 b7a:	bc 01       	movw	r22, r24
 b7c:	cd 01       	movw	r24, r26
 b7e:	08 95       	ret

00000b80 <_exit>:
 b80:	f8 94       	cli

00000b82 <__stop_program>:
 b82:	ff cf       	rjmp	.-2      	; 0xb82 <__stop_program>
